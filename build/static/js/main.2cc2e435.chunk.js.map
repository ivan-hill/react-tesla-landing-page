{"version":3,"sources":["components/Header.js","components/Section.js","components/Home.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Menu","RightMenu","CustomMenu","BurgerNav","props","show","CustomClose","Header","useState","BurgerStatus","setBurgerStatus","href","src","alt","onClick","xmlns","height","viewBox","width","fill","d","Wrap","bgImage","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Section","title","description","leftButtonText","rightButtonText","backgroundImg","bottom","Home","App","className","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2cc2e435.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    min-height: 60px;\n    width: 100%;\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n`;\n\nconst Menu = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content center;\n    flex: 1;\n\n    @media (max-width: 768px) {\n        display: none;\n    }\n\n    a {\n        font-weight: 600;\n        text-transform: uppercase;\n        padding: 0 10px;\n    }\n`;\n\nconst RightMenu = styled.div`\n    display: flex;\n    align-items: center;\n\n    a {\n        font-weight: 600;\n        text-transform: uppercase;\n        padding: 0 10px;\n    }\n`;\n\nconst CustomMenu = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n`;\n\nconst BurgerNav = styled.div`\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    width: 300px;\n    background: #fff;\n    z-index: 10;\n    list-style: none;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    transform: ${props => props.show ? 'translateX(0)' : 'translateX(100%)'};\n    transition: transform .5s ease-in-out;\n\n    li {\n        padding: 15px 0;\n        border-bottom: 1px solid rgba(0,0,0,0.2);\n    }\n\n    a {\n        font-weight: 600;\n    }\n`;\n\nconst CustomClose = styled(CustomMenu)`\n    justify-content: flex-end;\n`;\n\nfunction Header() {\n    const [ BurgerStatus, setBurgerStatus ] = useState(false);\n\n    return (\n        <Container>\n            <a href=\"/\">\n                <img src=\"/images/logo.svg\" alt=\"tesla logo\" />\n            </a>\n\n            <Menu>\n                <a href=\"/\">Model S</a>\n                <a href=\"/\">Model 3</a>\n                <a href=\"/\">Model X</a>\n                <a href=\"/\">Model Y</a>\n            </Menu>\n\n            <RightMenu>\n                <a href=\"/\">Shop</a>\n                <a href=\"/\">Tesla Account</a>\n                <CustomMenu onClick={() => setBurgerStatus(true)}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#393c41\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/></svg>\n                </CustomMenu>\n            </RightMenu>\n\n            <BurgerNav show={BurgerStatus}>\n                <CustomClose onClick={() => setBurgerStatus(false)}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#393c41\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"/></svg>\n                </CustomClose>\n                <li><a href=\"/\">Existing Iventory</a></li>\n                <li><a href=\"/\">Used Iventory</a></li>\n                <li><a href=\"/\">Trade-in</a></li>\n                <li><a href=\"/\">Cybertruck</a></li>\n                <li><a href=\"/\">Roadstar</a></li>\n                <li><a href=\"/\">Existing Iventory</a></li>\n                <li><a href=\"/\">Existing Iventory</a></li>\n                <li><a href=\"/\">Existing Iventory</a></li>\n            </BurgerNav>\n        </Container>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport styled from 'styled-components';\nimport Fade from 'react-reveal/Fade';\n\nconst Wrap = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    background-image: ${props => `url('/images/${props.bgImage}')`};\n    position: relative;\n    z-index: -1;\n`;\n\nconst ItemText = styled.div`\n    padding-top: 15vh;\n    text-align: center;\n`;\n\nconst Buttons = styled.div`\n    overflow: hidden;\n`;\n\nconst ButtonGroup = styled.div`\n    display: flex;\n    margin-bottom: 30px;\n\n    @media (max-width: 768px) {\n        flex-direction: column;\n    }\n`;\n\nconst LeftButton = styled.div`\n    cursor: pointer;\n    width: 256px;\n    height: 40px;\n    background-color: rgba(23, 26, 32, 0.8);\n    color: #fff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 100px;\n    opacity: 0.85;\n    text-transform: uppercase;\n    font-size: 12px;\n    margin: 8px;\n`;\n\nconst RightButton = styled(LeftButton)`\n    background-color: #fff;\n    color: #000;\n    opacity: 0.65;\n`;\n\nconst DownArrow = styled.img`\n    height: 40px;\n    animation: animationDown infinite 1.5s;\n`;\n\nfunction Section({ title, description, leftButtonText, rightButtonText, backgroundImg }) {\n    return (\n        <Wrap bgImage={backgroundImg}>\n            <Fade bottom>\n                <ItemText>\n                    <h1>{ title }</h1>\n                    <p>{ description }</p>\n                </ItemText>\n            </Fade>\n\n            <Buttons>\n                <Fade bottom>\n                    <ButtonGroup>\n                        <LeftButton>\n                            { leftButtonText }\n                        </LeftButton>\n                        {rightButtonText && \n                            <RightButton>\n                                { rightButtonText }\n                            </RightButton>\n                        }\n                    </ButtonGroup>\n                </Fade>\n\n                <DownArrow src=\"/images/down-arrow.svg\" />\n            </Buttons>\n        </Wrap>\n    )\n}\n\nexport default Section\n","import React from 'react';\nimport styled from 'styled-components';\nimport Section from './Section';\n\nconst Container = styled.div`\n    height: 100vh;\n`;\n\nfunction Home() {\n    return (\n        <Container>\n            <Section \n                title=\"Model S\" \n                description=\"Order for Touchless Delivery\" \n                backgroundImg=\"model-s.jpg\"\n                leftButtonText=\"Custom Order\"\n                rightButtonText=\"Existing Inventory\" \n            />\n\n            <Section \n                title=\"Model Y\" \n                description=\"Order for Touchless Delivery\" \n                backgroundImg=\"model-y.jpg\"\n                leftButtonText=\"Custom Order\"\n                rightButtonText=\"Existing Inventory\"\n            />\n\n            <Section\n                title=\"Model 3\" \n                description=\"Order for Touchless Delivery\" \n                backgroundImg=\"model-3.jpg\"\n                leftButtonText=\"Custom Order\"\n                rightButtonText=\"Existing Inventory\"\n            />\n\n            <Section \n                title=\"Model X\" \n                description=\"Order for Touchless Delivery\" \n                backgroundImg=\"model-x.jpg\"\n                leftButtonText=\"Custom Order\"\n                rightButtonText=\"Existing Inventory\"\n            />\n\n            <Section \n                title=\"Lowest Cost Solar Panels in America\" \n                description=\"Money-back Guarantee\" \n                backgroundImg=\"solar-panel.jpg\"\n                leftButtonText=\"Learn More\"\n                rightButtonText=\"Order Now\"\n            />\n\n            <Section \n                title=\"Solar for New Roofs\" \n                description=\"Solar Roofs Cost Less Than a New Roof Plus Solar Panels\" \n                backgroundImg=\"solar-roof.jpg\"\n                leftButtonText=\"Order Now\"\n                rightButtonText=\"Learn More\"\n            />\n\n            <Section \n                title=\"Accessories\" \n                description=\"\" \n                backgroundImg=\"accessories.jpg\"\n                leftButtonText=\"Shop Now\"\n            />\n        </Container>\n    )\n}\n\nexport default Home\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}